═══════════════════════════════════════════════════════════════
             METRICS SYSTEM - ШПАРГАЛКА
═══════════════════════════════════════════════════════════════

🚀 БЫСТРЫЕ КОМАНДЫ
─────────────────────────────────────────────────────────────

# Полный цикл (анализ + визуализация):
./analyze_metrics.sh --export-json --export-txt && ./visualize_metrics.sh

# Только анализ (консоль):
./analyze_metrics.sh

# Только визуализация:
./visualize_metrics.sh

# Открыть dashboard:
firefox Metrics/charts/metrics_dashboard.html

# Посмотреть сводку:
cat Metrics/charts/summary.txt

─────────────────────────────────────────────────────────────
📂 СТРУКТУРА ФАЙЛОВ
─────────────────────────────────────────────────────────────

Metrics/
├── data/langfuse_metrics.json      ← JSON метрики
├── reports/langfuse_report.txt     ← Текстовый отчёт
└── charts/
    ├── metrics_dashboard.html      ← Интерактивный dashboard
    ├── *.png                       ← Статические графики
    └── summary.txt                 ← Краткая сводка

─────────────────────────────────────────────────────────────
🔧 A/B ТЕСТИРОВАНИЕ
─────────────────────────────────────────────────────────────

# 1. Сохранить baseline:
./analyze_metrics.sh --export-json
cp Metrics/data/langfuse_metrics.json Metrics/data/baseline.json

# 2. Изменить параметры в params.override.json

# 3. Перезагрузить параметры (БЕЗ рестарта):
curl -X POST http://localhost:8010/config \
  -H "Content-Type: application/json" \
  -d @params.override.json

# 4. Сделать 20-30 запросов через расширение

# 5. Новые метрики:
./analyze_metrics.sh --export-json
cp Metrics/data/langfuse_metrics.json Metrics/data/experiment.json

# 6. Визуализировать оба:
./visualize_metrics.sh Metrics/data/baseline.json Metrics/charts/baseline
./visualize_metrics.sh Metrics/data/experiment.json Metrics/charts/experiment

# 7. Сравнить:
diff Metrics/charts/baseline/summary.txt Metrics/charts/experiment/summary.txt

─────────────────────────────────────────────────────────────
📸 SNAPSHOTS (историческое сравнение)
─────────────────────────────────────────────────────────────

# Создать snapshot:
DATE=$(date +%Y%m%d_%H%M)
mkdir -p Metrics/snapshots/$DATE
cp Metrics/data/langfuse_metrics.json Metrics/snapshots/$DATE/
cp Metrics/charts/*.png Metrics/snapshots/$DATE/

# Просмотр snapshots:
ls -lh Metrics/snapshots/

─────────────────────────────────────────────────────────────
🐛 TROUBLESHOOTING
─────────────────────────────────────────────────────────────

# "401 Unauthorized":
cat .env.local | grep LANGFUSE

# "No traces found":
# → Используйте расширение для запросов
# → Проверьте: https://cloud.langfuse.com

# "No latency data":
# → Это нормально для Langfuse 2.x API
# → Используйте Langfuse UI для latency

# Пустые графики:
# → Нужно минимум 10-20 traces

─────────────────────────────────────────────────────────────
📚 ДОКУМЕНТАЦИЯ
─────────────────────────────────────────────────────────────

METRICS_QUICKSTART.md     → Гид за 3 минуты
Metrics/README.md          → Полная документация
Metrics/USAGE.md           → Примеры workflow
Metrics/scripts/README.md  → Детали скриптов
LANGFUSE_SETUP.md          → Настройка Langfuse

─────────────────────────────────────────────────────────────
💡 ПОПУЛЯРНЫЕ ПАРАМЕТРЫ ДЛЯ ОПТИМИЗАЦИИ
─────────────────────────────────────────────────────────────

# Снизить latency:
LG_PROMPT_TEXT_CHARS      ↓ (12000 → 8000)
LG_NOTES_SHOW_MAX         ↓ (10 → 6)
GEMINI_MODEL              → gemini-2.5-flash-lite

# Снизить cost:
LG_PROMPT_TEXT_CHARS      ↓
RAG_TOP_K                 ↑ (8 → 12)
LG_ANSWER_MAX_SENTENCES   → 7

# Улучшить качество:
RAG_TOP_K                 ↑ (8 → 15)
LG_CHUNK_SIZE             ↑ (900 → 1200)
LG_NOTES_MAX              ↑ (6 → 12)

═══════════════════════════════════════════════════════════════
